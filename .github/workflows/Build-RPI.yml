# Verifies building

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          lfs: false
          submodules: false

      - uses: uraimo/run-on-arch-action@v2
        with:
          arch: armv6
          distro: bullseye
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          install: |
            sudo apt-get update
            sudo apt-get install -y build-essential pkg-config gcc g++ python3 python3-pip cmake libgl-dev libxcb-util-dev libx11-xcb-dev
            python3 -m pip install conan

          run: |
            conan remote add grc ${{ secrets.CONAN_REMOTE_URL }} --force
            conan user -r grc ${{ secrets.CONAN_USER }} -p ${{ secrets.CONAN_PASSWORD }}
            conan remove "*" -f
            conan install . -if build -pr:h ConanProfiles/pib+-Release.ini -pr:b ConanProfiles/pib+-Release.ini -r grc -o dev="front" -c tools.system.package_manager:mode=install -c tools.system.package_manager:sudo=True
            conan build . -if build
            cp build/Release/bin/2022 /artifacts
            cp build/Release/bin/2019 /artifacts

      # - name: Build deploy bundle
      #   run: |
      #       wget -c -nv "https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage"
      #       wget -c -nv "https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage"
      #       chmod a+x linuxdeploy-plugin-qt-x86_64.AppImage
      #       chmod a+x linuxdeploy-x86_64.AppImage
      #       export QML_SOURCES_PATHS=./src/Dash

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: RPI1.2b+DashFront-Release
          path: artifacts